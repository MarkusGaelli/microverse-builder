"use strict";(globalThis.webpackChunk_croquet_microverse=globalThis.webpackChunk_croquet_microverse||[]).push([[758],{7758:(i,e,t)=>{t.r(e),t.d(e,{default:()=>o});const o={modules:[{name:"Rapier",pawnBehaviors:[class RapierActor{destroy(){this.removeRigidBody()}getRigidBody(){if(!this.$rigidBody){if(void 0===this.rigidBodyHandle)return;const i=this.service("RapierPhysicsManager");this.$rigidBody=i.world.getRigidBody(this.rigidBodyHandle)}return this.$rigidBody}createRigidBody(i){this.removeRigidBody(),i.translation=new Worldcore.RAPIER.Vector3(...this.translation),i.rotation=new Worldcore.RAPIER.Quaternion(...this.rotation);const e=this.service("RapierPhysicsManager");this.$rigidBody=e.world.createRigidBody(i),this.rigidBodyHandle=this.$rigidBody.handle,e.rigidBodies[this.rigidBodyHandle]=this._target,this.getRigidBody().bodyType()===Worldcore.RAPIER.RigidBodyType.KinematicPositionBased&&(this.listen("setTranslation","Rapier$RapierActor.setKinematicTranslation"),this.listen("setRotation","Rapier$RapierActor.setKinematicRotation"),this.listen("moveTo","Rapier$RapierActor.setKinematicTranslation"),this.listen("rotateTo","Rapier$RapierActor.setKinematicRotation"))}setKinematicTranslation(i){this.getRigidBody().setNextKinematicTranslation(new Worldcore.RAPIER.Vector3(...i))}setKinematicRotation(i){this.getRigidBody().setNextKinematicRotation(new Worldcore.RAPIER.Quaternion(...i))}removeRigidBody(){if(this.getRigidBody()){const i=this.service("RapierPhysicsManager");i.rigidBodies[this.rigidBodyHandle]=void 0,i.world.removeRigidBody(this.getRigidBody()),this.rigidBodyHandle=void 0,this.$rigidBody=void 0}}createCollider(i){const e=this.service("RapierPhysicsManager");return e.world.createCollider(i,this.rigidBodyHandle).handle}}]}]}}}]);